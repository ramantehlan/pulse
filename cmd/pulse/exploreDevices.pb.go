// Code generated by protoc-gen-go. DO NOT EDIT.
// source: exploreDevices.proto

package exploreDevices

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_4343e5f53a5ee95e, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Device struct {
	PID                  string   `protobuf:"bytes,1,opt,name=pID,proto3" json:"pID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_4343e5f53a5ee95e, []int{1}
}

func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetPID() string {
	if m != nil {
		return m.PID
	}
	return ""
}

func (m *Device) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "exploreDevices.Empty")
	proto.RegisterType((*Device)(nil), "exploreDevices.Device")
}

func init() { proto.RegisterFile("exploreDevices.proto", fileDescriptor_4343e5f53a5ee95e) }

var fileDescriptor_4343e5f53a5ee95e = []byte{
	// 135 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x49, 0xad, 0x28, 0xc8,
	0xc9, 0x2f, 0x4a, 0x75, 0x49, 0x2d, 0xcb, 0x4c, 0x4e, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0xe2, 0x43, 0x15, 0x55, 0x62, 0xe7, 0x62, 0x75, 0xcd, 0x2d, 0x28, 0xa9, 0x54, 0xd2, 0xe3,
	0x62, 0x83, 0x88, 0x09, 0x09, 0x70, 0x31, 0x17, 0x78, 0xba, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70,
	0x06, 0x81, 0x98, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x4c, 0x60, 0x21, 0x30,
	0xdb, 0xc8, 0x8f, 0x8b, 0xcf, 0x15, 0xc5, 0x28, 0x21, 0x1b, 0x2e, 0x76, 0xf7, 0xd4, 0x12, 0x9f,
	0xcc, 0xe2, 0x12, 0x21, 0x51, 0x3d, 0x34, 0xcb, 0xc1, 0x76, 0x48, 0x89, 0xa1, 0x0b, 0x43, 0x68,
	0x25, 0x06, 0x03, 0xc6, 0x24, 0x36, 0xb0, 0xfb, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x5b,
	0x2f, 0x75, 0x59, 0xb7, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExploreDevicesClient is the client API for ExploreDevices service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExploreDevicesClient interface {
	GetList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (ExploreDevices_GetListClient, error)
}

type exploreDevicesClient struct {
	cc *grpc.ClientConn
}

func NewExploreDevicesClient(cc *grpc.ClientConn) ExploreDevicesClient {
	return &exploreDevicesClient{cc}
}

func (c *exploreDevicesClient) GetList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (ExploreDevices_GetListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ExploreDevices_serviceDesc.Streams[0], "/exploreDevices.ExploreDevices/GetList", opts...)
	if err != nil {
		return nil, err
	}
	x := &exploreDevicesGetListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ExploreDevices_GetListClient interface {
	Recv() (*Device, error)
	grpc.ClientStream
}

type exploreDevicesGetListClient struct {
	grpc.ClientStream
}

func (x *exploreDevicesGetListClient) Recv() (*Device, error) {
	m := new(Device)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ExploreDevicesServer is the server API for ExploreDevices service.
type ExploreDevicesServer interface {
	GetList(*Empty, ExploreDevices_GetListServer) error
}

// UnimplementedExploreDevicesServer can be embedded to have forward compatible implementations.
type UnimplementedExploreDevicesServer struct {
}

func (*UnimplementedExploreDevicesServer) GetList(req *Empty, srv ExploreDevices_GetListServer) error {
	return status.Errorf(codes.Unimplemented, "method GetList not implemented")
}

func RegisterExploreDevicesServer(s *grpc.Server, srv ExploreDevicesServer) {
	s.RegisterService(&_ExploreDevices_serviceDesc, srv)
}

func _ExploreDevices_GetList_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ExploreDevicesServer).GetList(m, &exploreDevicesGetListServer{stream})
}

type ExploreDevices_GetListServer interface {
	Send(*Device) error
	grpc.ServerStream
}

type exploreDevicesGetListServer struct {
	grpc.ServerStream
}

func (x *exploreDevicesGetListServer) Send(m *Device) error {
	return x.ServerStream.SendMsg(m)
}

var _ExploreDevices_serviceDesc = grpc.ServiceDesc{
	ServiceName: "exploreDevices.ExploreDevices",
	HandlerType: (*ExploreDevicesServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetList",
			Handler:       _ExploreDevices_GetList_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "exploreDevices.proto",
}
